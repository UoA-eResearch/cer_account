<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:jd="http://www.springframework.org/schema/jdbc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.0.xsd
   	  http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://www.springframework.org/schema/jdbc
      http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

  <context:annotation-config />
  <mvc:annotation-driven />

  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath:configuration.properties</value>
      </list>
    </property>
  </bean>

  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basename" value="messages" />
  </bean>
  
  <bean id="affiliationUtil" class="pm.util.AffiliationUtil" />

  <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
    <property name="messageConverters">
      <list>
        <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <bean class="org.springframework.http.MediaType">
                <constructor-arg value="application" />
                <constructor-arg value="json" />
              </bean>
            </list>
          </property>
        </bean>
      </list>
    </property>
  </bean>

  <bean id="identityDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${id.jdbc.driver.className}" />
    <property name="url" value="${id.jdbc.url}" />
    <property name="username" value="${id.jdbc.username}" />
    <property name="password" value="${id.jdbc.password}" />
    <property name="testOnBorrow" value="true" />
    <property name="validationQuery" value="SELECT 1" />
    <property name="initialSize" value="2" />
    <property name="maxActive" value="2" />
    <property name="maxIdle" value="2" />
  </bean>

  <bean id="identityMybatisSqlMapClient" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="configLocation" value="classpath:mybatis_sql_map_config.xml" />
    <property name="dataSource" ref="identityDataSource" />
  </bean>

  <bean id="identitySqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg index="0" ref="identityMybatisSqlMapClient" />
  </bean>

  <bean id="identityDao" class="id.db.MyBatisIdentityDao">
    <property name="sqlSessionFactory" ref="identityMybatisSqlMapClient"></property>
  </bean>

  <bean id="projectDao" class="pm.dao.RestProjectDao">
    <property name="baseUrl" value="${pm.rest.baseurl}" />
    <property name="restTemplate" ref="restTemplate" />
  </bean>

  <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="${email.smtp.server}" />
  </bean>

  <bean id="email" class="common.util.Email" />
  <bean id="templateEmail" class="common.util.TemplateEmail" />

</beans>
